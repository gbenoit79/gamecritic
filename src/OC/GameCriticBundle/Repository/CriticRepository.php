<?php

namespace OC\GameCriticBundle\Repository;

use OC\GameCriticBundle\Entity\Game;

/**
 * CriticRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CriticRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Get latest critics
     * 
     * @param int $start
     * @param int $limit
     * @return array
     */
    public function getLatestCritics($start, $limit)
    {
        if (!is_int($start) || $start < 0) {
            throw new \Exception('Invalid start parameter');
        } elseif (!is_int($limit) || $limit < 1) {
            throw new \Exception('Invalid limit parameter');
        }
        
        $query = $this->_em->createQuery('
SELECT c 
FROM OCGameCriticBundle:Critic c 
ORDER BY c.creationDate DESC
');
        $query->setFirstResult($start);
        $query->setMaxResults($limit);

        return $query->getResult();
    }

    /**
     * Calculate score
     * 
     * @param Game $game
     * @return string
     */
    public function calulateScore(Game $game)
    {
        if (!$game instanceof Game) {
            throw new \Exception('Invalid game parameter');
        }
        
        $query = $this->_em->createQuery('
SELECT AVG(c.score) 
FROM OCGameCriticBundle:Critic c 
WHERE c.game = :game
GROUP BY c.game
');
        $query->setParameter('game', $game);
        $score = $query->getSingleScalarResult();

        return $score;
    }
}
